apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deploy
  labels:
    app: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: docker-headless-vnc-epotes-cli
        image: monadic.azurecr.io/docker-headless-vnc-epotes-cli
        imagePullPolicy: Always
        args:
          ### make normal UI startup to connect via: oc rsh <pod-name> bash
          # - '--tail-log'
          - '--debug'
        ### checks that vnc server is up and running
        livenessProbe:
          tcpSocket:
            port: 5901
          initialDelaySeconds: 1
          timeoutSeconds: 1
        ### checks if http-vnc connection is working
        readinessProbe:
          httpGet:
            path: /
            port: 6901
            scheme: HTTP
          initialDelaySeconds: 1
          timeoutSeconds: 1
        resources:
        ports:
          - containerPort: 5901
          - containerPort: 6901
          - containerPort: 789
        env:
          - name: server-service-epoptes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deploy
  labels:
    app: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server
  template:
    metadata:
      labels:
        app: server
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: docker-headless-vnc-epotes-srv
        image: monadic.azurecr.io/docker-headless-vnc-epotes-srv:latest
        imagePullPolicy: Always
        args:
          ### make normal UI startup to connect via: oc rsh <pod-name> bash
          # - '--tail-log'
          - '--debug'
        ### checks that vnc server is up and running
        livenessProbe:
          tcpSocket:
            port: 5901
          initialDelaySeconds: 1
          timeoutSeconds: 1
        ### checks if http-vnc connection is working
        readinessProbe:
          httpGet:
            path: /
            port: 6901
            scheme: HTTP
          initialDelaySeconds: 1
          timeoutSeconds: 1
        resources:
        ports:
          - containerPort: 5901
          - containerPort: 6901
          - containerPort: 789
---
apiVersion: v1
kind: Service
metadata:
  name: server-service-epoptes
  labels:
    app: server
spec:
  selector:
    app: server-deploy
  externalName: epoptes
  ports:
  - name: http-port-tcp
    protocol: TCP
    port: 789
    targetPort: 789
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: server-service-http
  labels:
    app: server
spec:
  selector:
    app: server-deploy
  externalName: vnc-browser
  ports:
  - name: http-port-tcp
    protocol: TCP
    port: 80
    targetPort: 6901
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-ingress
  annotations:
    kubernetes.io/ingress.class: addon-http-application-routing
spec:
  rules:
  - host: browser.0aa78c09b01d40a79e18.westus2.aksapp.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: server-service-http
            port:
              number: 80
